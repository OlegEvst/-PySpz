#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ PySpz.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
–¥–ª—è —á—Ç–µ–Ω–∏—è SPZ —Ñ–∞–π–ª–æ–≤.
"""

import pyspz
import numpy as np
import io
import gzip


def create_sample_spz_data():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–º–µ—Ä SPZ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏."""
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ SPZ v2
    header_data = (
        0x5053474E.to_bytes(4, 'little') +  # magic 'NGSP'
        (2).to_bytes(4, 'little') +         # version 2
        (2).to_bytes(4, 'little') +         # num_points 2
        (0).to_bytes(1, 'little') +          # sh_degree 0
        (8).to_bytes(1, 'little') +          # fractional_bits 8
        (0).to_bytes(1, 'little') +          # flags 0
        (0).to_bytes(1, 'little')            # reserved 0
    )
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è 2 —Ç–æ—á–µ–∫
    # Positions: 2 —Ç–æ—á–∫–∏ * 3 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã * 3 –±–∞–π—Ç–∞ = 18 –±–∞–π—Ç
    positions_data = b'\x00\x00\x00' * 6  # –í—Å–µ –Ω—É–ª–∏
    
    # Alphas: 2 —Ç–æ—á–∫–∏ * 1 –±–∞–π—Ç = 2 –±–∞–π—Ç–∞
    alphas_data = b'\x80\x80'  # –°—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    
    # Colors: 2 —Ç–æ—á–∫–∏ * 3 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã = 6 –±–∞–π—Ç
    colors_data = b'\x80\x80\x80\x80\x80\x80'  # –°–µ—Ä—ã–µ —Ü–≤–µ—Ç–∞
    
    # Scales: 2 —Ç–æ—á–∫–∏ * 3 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã = 6 –±–∞–π—Ç
    scales_data = b'\x80\x80\x80\x80\x80\x80'  # –°—Ä–µ–¥–Ω–∏–µ –º–∞—Å—à—Ç–∞–±—ã
    
    # Rotations v2: 2 —Ç–æ—á–∫–∏ * 3 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã = 6 –±–∞–π—Ç
    rotations_data = b'\x00\x00\x00\x00\x00\x00'  # –ù—É–ª–µ–≤—ã–µ —Ä–æ—Ç–∞—Ü–∏–∏
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    body_data = positions_data + alphas_data + colors_data + scales_data + rotations_data
    
    # –°–∂–∏–º–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    compressed_body = gzip.compress(body_data)
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π SPZ —Ñ–∞–π–ª
    spz_data = header_data + compressed_body
    
    return spz_data


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏."""
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ PySpz")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä SPZ –¥–∞–Ω–Ω—ã—Ö
    print("üì¶ –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä SPZ –¥–∞–Ω–Ω—ã—Ö...")
    spz_data = create_sample_spz_data()
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω SPZ —Ñ–∞–π–ª —Ä–∞–∑–º–µ—Ä–æ–º {len(spz_data)} –±–∞–π—Ç")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ PySpz
    print("\nüìñ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ PySpz...")
    file_obj = io.BytesIO(spz_data)
    data = pyspz.load(file_obj)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
    print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–∞—É—Å—Å–∏–∞–Ω: {len(data['positions'])}")
    
    print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:")
    for key, array in data.items():
        print(f"  {key}: {array.shape} {array.dtype}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
    print("\nüîç –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö:")
    print(f"  Positions (–ø–µ—Ä–≤—ã–µ 2 —Ç–æ—á–∫–∏):\n{data['positions']}")
    print(f"  Alphas (–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å):\n{data['alphas']}")
    print(f"  Colors (RGB):\n{data['colors']}")
    print(f"  Scales (–º–∞—Å—à—Ç–∞–±—ã):\n{data['scales']}")
    print(f"  Rotations (–∫–≤–∞—Ç–µ—Ä–Ω–∏–æ–Ω—ã):\n{data['rotations']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é –∫–≤–∞—Ç–µ—Ä–Ω–∏–æ–Ω–æ–≤
    print("\nüßÆ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–≤–∞—Ç–µ—Ä–Ω–∏–æ–Ω–æ–≤:")
    for i, quat in enumerate(data['rotations']):
        norm = np.linalg.norm(quat)
        print(f"  –ö–≤–∞—Ç–µ—Ä–Ω–∏–æ–Ω {i}: –Ω–æ—Ä–º–∞ = {norm:.6f}")
    
    print("\n‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("üéâ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ PySpz –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∞—è!")


if __name__ == "__main__":
    main()
